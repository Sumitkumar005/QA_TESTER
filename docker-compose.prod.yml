version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: code-quality-mongodb-prod
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_prod:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-secure_password}
      MONGO_INITDB_DATABASE: ${DATABASE_NAME:-code_quality_db}
    networks:
      - code-quality-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: code-quality-backend-prod
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./temp:/app/temp
      - ./logs:/app/logs
    environment:
      - ENVIRONMENT=production
      - MONGODB_URL=mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-secure_password}@mongodb:27017/${DATABASE_NAME:-code_quality_db}?authSource=admin
      - DATABASE_NAME=${DATABASE_NAME:-code_quality_db}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - FAISS_INDEX_PATH=/app/data/faiss_index
      - TEMP_DIR=/app/temp
      - LOG_LEVEL=INFO
    depends_on:
      - mongodb
    networks:
      - code-quality-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: code-quality-frontend-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - code-quality-network
    volumes:
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates

volumes:
  mongodb_data_prod:

networks:
  code-quality-network:
    driver: bridge
